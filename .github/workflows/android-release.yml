name: Android Release Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Create local.properties
      run: |
        echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" > local.properties
        
    - name: Build debug APK
      run: ./gradlew assembleDebug
      
    - name: Build release APK
      run: ./gradlew assembleRelease
      
    - name: Sign APK
      uses: r0adkll/sign-android-release@v1
      id: sign_app
      with:
        releaseDirectory: app/build/outputs/apk/release
        signingKeyBase64: ${{ secrets.SIGNING_KEY }}
        alias: ${{ secrets.ALIAS }}
        keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
        keyPassword: ${{ secrets.KEY_PASSWORD }}
      env:
        BUILD_TOOLS_VERSION: "34.0.0"
        
    - name: Upload APK artifacts
      uses: actions/upload-artifact@v3
      with:
        name: app-artifacts
        path: |
          app/build/outputs/apk/debug/*.apk
          app/build/outputs/apk/release/*.apk
          
  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: app-artifacts
        path: artifacts/
        
    - name: Get current date
      id: date
      run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
      
    - name: Get commit hash
      id: commit
      run: echo "hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.date.outputs.date }}-${{ steps.commit.outputs.hash }}
        release_name: SearchPlant v${{ steps.date.outputs.date }}
        body: |
          ## SearchPlant Release - ${{ steps.date.outputs.date }}
          
          ### Changes
          - Latest updates from main branch
          - Commit: ${{ steps.commit.outputs.hash }}
          
          ### Downloads
          - **app-debug.apk**: Debug version for testing
          - **app-release.apk**: Production-ready version
          
          ### Installation
          1. Download the APK file
          2. Enable "Install from unknown sources" in Android settings
          3. Install the APK on your device
          
          ### Requirements
          - Android 7.0 (API level 24) or higher
          - Camera permission for plant scanning
          - Internet connection for AI identification
        draft: false
        prerelease: false
        
    - name: Upload Debug APK
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/debug/app-debug.apk
        asset_name: SearchPlant-debug-${{ steps.date.outputs.date }}.apk
        asset_content_type: application/vnd.android.package-archive
        
    - name: Upload Release APK
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/release/app-release.apk
        asset_name: SearchPlant-release-${{ steps.date.outputs.date }}.apk
        asset_content_type: application/vnd.android.package-archive